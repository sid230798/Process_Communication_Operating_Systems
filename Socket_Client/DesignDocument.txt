--------------------------------------------------------------------------------------------------------------------

Name :- Siddharth Nahar
Entry No :- 2016csb1043
Date :- 18/11/18

---------------------------------------------------------------------------------------------------------------------

*Also Outputs Correctly if Server gets Down and there are pending Request and Server Resumes.

---------------------------------------------------------------------------------------------------------------------

* To Create IPC shared Memory for Server-Client

	- Used ipc.h header for different functionalites.
	- shmap to map to pointer in which we have to update Info
	- Secret Key used is 97,Identified only by our processes.

	/*Create Shared IPC memory for Process with secrete key as 97*/
	key_t secret_key = ftok("SharedMemory", 97);

	/*Creates 1024 bytes memory*/
	int shmid = shmget(secret_key, 1024, 0666|IPC_CREAT); 

	/* shmat to attach to shared memory */
	struct Message *val = (struct Message*) shmat(shmid, (void*)0, 0); 

	
----------------------------------------------------------------------------------------------------------------------

* For Http get request for parameters passed

	- Used wget to download ans and save it in Data.json
	- Used system() function to call this command then parse file for required Data.
	- Output is in format : {"INR_USD":{"val":0.014012}} , found position of first digit and curly bracket
	- Took that substring and returned

	Command :- wget -q 'http://free.currencyconverterapi.com/api/v5/convert?q=EUR_USD&compact=y' -O -> data.json

	/*Get the index first digit and first ending bracket and output*/
	int indexOfColon = strcspn(line, "0123456789") - 1;
	int endindex = strcspn(line, "}");

	
	char Value[30] = {0};

	memcpy(Value, line + indexOfColon +1, endindex - indexOfColon);

	float ans = atof(Value);

----------------------------------------------------------------------------------------------------------------------

* For Waiting of client and Server for results

	- Maintain a structure which holds variables for specific use

	struct Message{

		/*Request variable for waiting and relasing wait in client and server

			- Value 1 means client is ready
			- Value 2 means HTTP GET request is being done

		*/
		int request;

		/*

			-This Stores Currency input by client whose INR value has to be found.
			- Assuming value <4
		*/
		char str[5];

		/*Stores the fetched value by Http get if wrong input output 0*/
		float parsedValue;

	};
